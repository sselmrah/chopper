@model chopper1.Models.Week

@{

    ViewBag.Title = Model.Note;
    int weekNumInt = Convert.ToInt32(ViewBag.WeekId);
}

<!--<h2>@Model.Note</h2>-->

<div class="weekPickerContainer">
    <div class="weekPickerArrow">
        <a href="@Url.Action("getWeek", "Weeks", new { week_num = (weekNumInt-1).ToString()}, null)">
            <span class="weekPickerIcon glyphicon glyphicon-backward" style="color:black"></span>
        </a>
    </div>
    <div id="weekSelectContainer">@{Html.RenderAction("SelectCategory", "Weeks", new { curWeekRef = Model.Ref });}</div>
    <div class="weekPickerArrow">
        <a href="@Url.Action("getWeek", "Weeks", new { week_num = (weekNumInt+1).ToString()}, null)">
            <span class="weekPickerIcon glyphicon glyphicon-forward" style="color:black"></span>
        </a>
    </div>
</div>
<p id="timestampDiv">@DateTime.Now.ToString("dd/MM/yyyy") @DateTime.Now.ToString("HH:mm:ss")</p>
<div class="row week_bg">
    @{Html.RenderAction("ConstructTimeScale", "Day", new { left = true, channelCode = 10 });}
    @{var i = 0;
    double dayRectWidth = 95.0 / Convert.ToDouble(Model.DaysCount);
    string dayRectWidthStr = dayRectWidth.ToString("#.##").Replace(",", ".") + "%";
    }
    @foreach (chopper1.ws1c.WeekTVDayType day in Model.Days)
    {
        <div id="@day.TVDayRef" class="dayrect" ondrop="drop(event)" ondragover="allowDrop(event)" style="width: @dayRectWidthStr;">            
            @{Html.RenderAction("ConstructDay", "Day", day);}            
        </div>
        i += 1;
    }
    @{Html.RenderAction("ConstructTimeScale", "Day", new { left = false, channelCode = 10 });}
</div>
<script>

    document.addEventListener("DOMContentLoaded", function a() {
        try{
            var source = new EventSource('checkdays');
            var myP = document.getElementById("messages");

            source.onmessage = function (event) {
                var result = event.data;
                @*myP.innerHTML += result;*@
                @*If result not empty - call actionresult to redraw a day*@
                if (result != "") {
                    var xmlhttp;
                    xmlhttp = new XMLHttpRequest();

                    xmlhttp.onreadystatechange = function () {
                        if (xmlhttp.readyState == XMLHttpRequest.DONE) {
                            if (xmlhttp.status == 200) {
                                console.log(result);
                                document.getElementById(result).innerHTML = xmlhttp.responseText;
                                document.getElementById("timestampDiv").innerHTML = getTimeStamp();
                            }
                            else if (xmlhttp.status == 400) {
                                @*alert('There was an error 400')*@                                
                                console.log(xmlhttp.statusText);
                            }
                            else {
                                @*alert('something else other than 200 was returned')*@
                                console.log(xmlhttp.statusText);
                            }
                        }
                    }
                    xmlhttp.open("POST", "UpdateDayWeek", true);
                    xmlhttp.setRequestHeader("dayID", result);
                    console.log(result);
                    xmlhttp.send(result);
                }
            };
        }
        catch (err)
        {
            console.log(err.message);
        }
        source.onerror = function (e) {
            console.log();
        };

    });

</script>
