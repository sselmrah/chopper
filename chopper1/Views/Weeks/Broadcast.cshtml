@model List<chopper1.Models.Day>
@{
    string curDate = Model[0].TVDate.Date.ToString("yyyy-MM-dd");
    string curDow = @System.Globalization.DateTimeFormatInfo.CurrentInfo.GetDayName(Model[0].TVDate.DayOfWeek);
    if (curDow.Right(1) == "а") curDow = curDow.Left(curDow.Length - 1) + "у";
    string dayVariantList = "";
    ViewBag.Title = Model[0].TVDate.Date.ToString("dd/MM/yyyy");
}
<div class="row">
    <div class="col-lg-1"></div>
    <div class="col-lg-10">
        @using (Html.BeginForm("Broadcast", "Weeks", FormMethod.Get))
        {
            <fieldset>
                <h2 style="padding-left:20px">Программа передач Первого канала на @curDow, <input name="bdate" type="date" id="broadcast_datepicker" class="datepickers" required="required" value="@curDate" onchange="form.submit();" /></h2>
            </fieldset>
        }
    </div>
    <div class="col-lg-1"></div>
</div>
<div class="row">
    <div class="col-lg-9"></div>
    <div class="col-lg-2">
        <p id="timestampDiv">@DateTime.Now.ToString("dd/MM/yyyy") @DateTime.Now.ToString("HH:mm:ss")</p>
    </div>
    <div class="col-lg-1"></div>
</div>
<div class="row week_bg">
    @{
        double dayRectWidth = 100.0 / 6 - 0.00001;
        string dayRectWidthStr = dayRectWidth.ToString("#.########").Replace(",", ".") + "%";
    }
    <div class="col-lg-1 noPadding"></div>
    <div class="col-lg-10 noPadding">
        @foreach (chopper1.Models.Day day in Model)
        {
            dayVariantList += day.TVDate.ToString("dd.MM.yyyy") + "_" + day.VariantKod + "_" + day.KanalKod + ";";
            <div style="float:left">
                @{
            Html.RenderAction("ConstructTimeScale", "Day", new { left = true, channelCode = day.KanalKod });
                }
            </div>
            <div id="@day.TVDayRef" data-varnum="@day.VariantKod" data-chcode="@day.KanalKod" class="dayrect" ondrop="drop(event)" ondragover="    allowDrop(event)" style="width: @dayRectWidthStr;">
                @{Html.RenderAction("BroadcastDay", "Day", day);}
            </div>
        }
        @{
            dayVariantList = dayVariantList.Substring(0, dayVariantList.Length - 1);
        }
        @{Html.RenderAction("ConstructTimeScale", "Day", new { left = false, channelCode = 10 });}
    </div>

    <div class="col-lg-1 noPadding"></div>
</div>

<div class="rightSideButtons">
    <a id="rtfDownloadLink" href="@Url.Action("Download", "Weeks", new { dayVariantList = dayVariantList, repType = "broadcast" }, null)">
        <div class="sideButtons" id="rtfButton" data-reporttype="broadcast" data-tvdate=@Model[0].TVDate.ToString("yyyy-MM-dd")>
            <span>.rtf</span>
        </div>
    </a>
</div>

@section scripts {
    <script src="~/Scripts/jquery-2.0.0.js"></script>
    <script src="~/Scripts/jquery.signalR-2.2.0.min.js"></script>
    <script src="~/signalr/hubs"></script>
    <script src="~/Scripts/jquery.unobtrusive-ajax.js"></script>

    <script>

        $(function () {
            var dUpdate = $.connection.dayUpdate;
            var xmlhttp;
            xmlhttp = new XMLHttpRequest();


            dUpdate.client.broadcastMessage = function (tvdayref, varNum, serverTime) {
                if (tvdayref != "") {
                    var xmlhttp;
                    xmlhttp = new XMLHttpRequest();

                    xmlhttp.onreadystatechange = function () {
                        if (xmlhttp.readyState == XMLHttpRequest.DONE) {
                            console.log(tvdayref + '-' + serverTime);
                            if (xmlhttp.status == 200) {
                                document.getElementById(tvdayref).innerHTML = xmlhttp.responseText;
                                document.getElementById("timestampDiv").innerHTML = serverTime;
                            }
                            else if (xmlhttp.status == 400) {
                                console.log(xmlhttp.statusText);
                            }
                            else {
                                console.log(xmlhttp.statusText);
                                console.log(xmlhttp.responseText);
                            }
                        }
                    }
                    xmlhttp.open("POST", "UpdateDayBroadcast", true);
                    xmlhttp.setRequestHeader("dayID", tvdayref);
                    xmlhttp.setRequestHeader("varNum", varNum);
                    xmlhttp.send(tvdayref);
                }
            };
            /*Added 22/06/16*/
            $.connection.hub.disconnected(function () {
                setTimeout(function () {
                    $.connection.hub.start();
                }, 5000); // Restart connection after 5 seconds.
            });

            $.connection.hub.start().done(function () {
                var allDayRects1 = document.getElementsByClassName("dayrect");
                for (var i = 0; i < allDayRects1.length; i++) {
                    dUpdate.server.subscribe(allDayRects1.item(i).id);
                }
                setInterval(function () {
                    var allDayRects2 = document.getElementsByClassName("dayrect");
                    for (var i = 0; i < allDayRects2.length; i++) {
                        if (allDayRects1.item(i).id != allDayRects2.item(i).id) {
                            dUpdate.server.subscribe(allDayRects2.item(i).id);
                        }
                    }
                    allDayRects1 = allDayRects2;
                }, 3000);
            });
        });
    </script>
   }