@model chopper1.Models.Week

@{
    Layout = null;
    ViewBag.Title = "Endless week";
    int weekNumInt = Convert.ToInt32(ViewBag.WeekId);
    chopper1.ws1c.WeekTVDayType firstDay = Model.Days[0];
    chopper1.ws1c.WeekTVDayType lastDay = Model.Days[Model.Days.Count - 1];

    
    
    string dayVariantList = "";
    Random rnd = new Random();
    int month = rnd.Next(1, 4);
    string icoPath = "";
    switch (month)
    {
        case 1:
            icoPath = "/chopper_heli_favicon.ico";
            break;
        case 2:
            icoPath = "/chopper_knife_favicon.ico";
            break;
        case 3:
            icoPath = "/chopper_moto_favicon.ico";
            break;
    }

}

<!--<h2>@Model.Note</h2>-->
<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@ViewBag.Title - ChOpper</title>
    <link href='@Url.Content("~/Content/themes/base/all.css")' rel="stylesheet" type="text/css" />
    <link rel="stylesheet" href="~/Content/StyleSheet1.css">
    <link rel="stylesheet" href="~/Content/Stolby.css">
    <link rel="stylesheet" href="~/Content/Orbity.css">
    <link rel="stylesheet" href="~/Content/bootstrap.css">
    <script src="~/Scripts/jquery-2.0.0.js"></script>
    <script src="~/Scripts/jquery.validate.js"></script>
    <script src="~/Scripts/jquery.signalR-2.2.0.min.js"></script>
    <script src="~/signalr/hubs"></script>
    <script src="~/Scripts/jquery.unobtrusive-ajax.js"></script>


    <link rel="icon" href="@icoPath" type="image/x-icon">

    @Styles.Render("~/Content/css")
    @Scripts.Render("~/bundles/modernizr")
 




        
    


    </head>
    <body>
        <div class="navbar navbar-inverse navbar-fixed-top">
            <div class="container">
                <div class="navbar-header">

                    <button type="button" class="navbar-toggle" data-toggle="collapse" data-target=".navbar-collapse">
                        <span class="icon-bar"></span>
                        <span class="icon-bar"></span>
                        <span class="icon-bar"></span>
                    </button>
                    @Html.ActionLink("ChOpper", "Index", "Home", new { area = "" }, new { @class = "navbar-brand" })
                </div>
                <div class="navbar-collapse collapse">
                    <ul class="nav navbar-nav">
                        <li>@Html.ActionLink("Раскладка", "WeekChosen", "Weeks", new { WeekId = ViewBag.WeekId, repType = "raskladka" }, null)</li>
                        <li>@Html.ActionLink("Орбиты", "WeekChosen", "Weeks", new { WeekId = ViewBag.WeekId, repType = "orbity" }, null)</li>
                        <li>@Html.ActionLink("Столбы", "WeekChosen", "Weeks", new { WeekId = ViewBag.WeekId, repType = "stolby" }, null)</li>
                        @*<li>@Html.ActionLink("Календарь", "Contact", "Home")</li>*@
                        @*<li>@using (Html.BeginForm("Search", "planCatDb", FormMethod.Post, new { target = "_blank" }))
                        {
                        @Html.TextBox("catSearchTb", "Поиск", new { onclick = "Clear();" });
                        }</li>
                        *@
                        <li>
                            @using (Html.BeginForm("PerformAdvSearch", "AdvSearch", FormMethod.Post, new { target = "_blank" }))
                            {
                                @Html.TextBox("Title", "Поиск", new { onclick = "Clear();" });
                            }
                        </li>
                    </ul>
                    @Html.Partial("_LoginPartial")
                </div>
            </div>
        </div>




        <div id="weekPickerContainer" class="weekPickerContainer" style="position:fixed;margin-top:-50px; margin-left:300px; width:100%">           
            <div class="col-lg-1 weekPickerArrow visible-lg" style="float:left">
                <a href="@Url.Action("getWeek", "Weeks", new { week_num = (weekNumInt-1).ToString()}, null)">
                    <span class="weekPickerIcon glyphicon glyphicon-backward" style="color:black; float:right"></span>
                </a>
            </div>
            <div id="weekSelectContainer" style="float:left">@{Html.RenderAction("SelectCategory", "Weeks", new { curWeekRef = Model.Ref });}</div>
            <div class="weekPickerArrow visible-lg" style="float:left">
                <a href="@Url.Action("getWeek", "Weeks", new { week_num = (weekNumInt+1).ToString()}, null)">
                    <span class="weekPickerIcon glyphicon glyphicon-forward" style="color:black"></span>
                </a>
            </div>            
        </div>
        <div class="row visible-lg">
            <div class="col-lg-10"></div>
            <div class="col-lg-2">
                <p id="timestampDiv">@DateTime.Now.ToString("dd/MM/yyyy") @DateTime.Now.ToString("HH:mm:ss")</p>
            </div>
        </div>
        <div id="endlessScrollContainer" class="endlessScrollContainer week_bg" style="">
            <div style="float:left">
                @{Html.RenderAction("DrawTimeScale", "Day", new { left = true, channelCode = 10 });}
            </div>
            @{
                var i = 0;
                int dayRectWidth = 200;
                string dayRectWidthStr = dayRectWidth.ToString() + "px";
                string lastDayChCode = "";
                string lastDayDate = "";
                DateTime nextDt;
                string nextDayDate = "";
                DateTime prevDt;
                string prevDayDate = "";
                prevDt = Model.Days[0].TVDate - TimeSpan.FromDays(1);
                prevDayDate = prevDt.ToString("dd.MM.yyyy");
            }
            <div id="daysDiv" class="noPadding">
                <div id="emptyPrevDay" class="dayrectAdd" data-chcode="@Model.Days[0].KanalKod" data-tvdate="@prevDayDate" ondrop="drop(event)" ondragover="allowDrop(event)" style="width: @dayRectWidthStr">                    
                    <div class="loadingContainer"> 
                        <div class="loadingImgContainer">
                            <img class="loadingImg" src="~/Content/images/preloader-01.gif"/>
                        </div>
                    </div>
                    <div class="loadingLabel">
                       ИДЕТ ЗАГРУЗКА ДАННЫХ...
                    </div>
                </div>
                @*foreach (chopper1.ws1c.WeekTVDayType day in Model.Days)*@
                    
                @{
                    chopper1.ws1c.WeekTVDayType day = Model.Days[0];
                    dayVariantList += day.TVDate.ToString("dd.MM.yyyy") + "_" + day.VariantKod + "_" + day.KanalKod + ";";

                    <div id="@day.TVDayRef" class="dayrect" data-chcode="@day.KanalKod" ondrop="drop(event)" ondragover="allowDrop(event)" style="width: @dayRectWidthStr;">
                        @{Html.RenderAction("ConstructDay", "Day", day);}
                    </div>
                        lastDayChCode = day.KanalKod.ToString();
                        lastDayDate = day.TVDate.ToString("dd.MM.yyyy");
                        nextDt = DateTime.Parse(lastDayDate) + TimeSpan.FromDays(1);
                        nextDayDate = nextDt.ToString("dd.MM.yyyy");

                        i += 1;
                }
                <div id="emptyNextDay" class="dayrectAdd" data-chcode="@lastDayChCode" data-tvdate="@nextDayDate" ondrop="drop(event)" ondragover="allowDrop(event)" style="width: @dayRectWidthStr">
                    <div class="loadingContainer">
                        <div class="loadingImgContainer">
                            <img class="loadingImg" src="~/Content/images/preloader-01.gif" />
                        </div>
                    </div>
                    <div class="loadingLabel">
                        ИДЕТ ЗАГРУЗКА ДАННЫХ...
                    </div>
    @*<div id="addDayButton" style="font-size:x-large; color:darkgray; background-color:white" onclick="addDay()">
                        Добавить @nextDayDate
                    </div>*@
                </div>
            </div>
            @{
                dayVariantList = dayVariantList.Substring(0, dayVariantList.Length - 1);
            }

            @{Html.RenderAction("DrawTimeScale", "Day", new { left = false, channelCode = 10 });}

        </div>


            <script>

                
                function addDaySync() {
                    var curDt = $("#emptyNextDay").data("tvdate");
  
                    var xmlhttp = new XMLHttpRequest();

                    xmlhttp.onreadystatechange = function () {
                        if (xmlhttp.readyState == XMLHttpRequest.DONE) {
                            if (xmlhttp.status == 200) {
                                var itm = document.getElementById("emptyNextDay");
                                var cln = itm.cloneNode(true);
                                document.getElementById('daysDiv').appendChild(cln);
                                document.getElementById('daysDiv').children[document.getElementById('daysDiv').children.length - 2].innerHTML = xmlhttp.responseText;
                                var res = $("#emptyNextDay").find(".dow-div").first().data("tvdayref");
                                //console.log("res: "+res);
                                document.getElementById('daysDiv').appendChild(cln);
                                //Нужно бы еще дописать добавление в список на апдейт
                                document.getElementById('daysDiv').children[document.getElementById('daysDiv').children.length - 2].id = res;
                                itm.classList.remove('dayrectAdd');
                                itm.classList.add('dayrect');
                                var cln = document.getElementById('daysDiv').children[document.getElementById('daysDiv').children.length - 1];
                                cln.id = "emptyNextDay";
                                //console.log(document.getElementById('daysDiv').children[document.getElementById('daysDiv').children.length - 1].id);


                                var parts = curDt.split(".");
                                var dt = new Date(parseInt(parts[2], 10),
                                                  parseInt(parts[1], 10) - 1,
                                                  parseInt(parts[0], 10));

                                console.log("dt: " + dt.toString());
                                dt.setDate(dt.getDate() + 1);
                                var month = dt.getMonth() + 1;
                                var day = dt.getDate();
                                var newDateStr = (day < 10 ? '0' : '') + day + '.' + (month < 10 ? '0' : '') + month + '.' + dt.getFullYear();
                                cln.dataset.tvdate = newDateStr;
                                console.log("cln.dataset.tvdate: " + cln.dataset.tvdate);
                                console.log("same: " + $("#emptyNextDay").data("tvdate"));
                                document.getElementById('addDayButton').innerHTML = "Добавить " + newDateStr;





                                var cont = document.getElementById('endlessScrollContainer');
                                var style = window.getComputedStyle(cont, null);
                                var newWidth = document.getElementById('daysDiv').children.length * parseInt(document.getElementById('daysDiv').children[0].style.width) + 100;
                                console.log("newWidth: " + newWidth);
                                cont.style.width = newWidth + "px";
                                console.log("newWidth: " + newWidth);
                            }
                            else if (xmlhttp.status == 400) {
                                alert('There was an error 400');
                            }
                            else {
                                alert('something else other than 200 was returned');
                            }
                        }
                    };
                        
                        xmlhttp.open("POST", "/Day/AddDayByDate", false);
                        xmlhttp.setRequestHeader("curDt", curDt);
                        xmlhttp.send(curDt);

                }

                function addDay() {
                    var curDt = $("#emptyNextDay").data("tvdate");
                    //console.log("curDt_start: " + $("#emptyNextDay").data("tvdate"));
                    //console.log("curDt_alt: " + document.getElementById('daysDiv').children[document.getElementById('daysDiv').children.length - 1].dataset.tvdate);

                    $.ajax({
                        type: 'POST',
                        cache: false,                         
                        data: { 'curDt': curDt },
                        url: '/Day/AddDayByDate',
                        success: function (data) {
                            var itm = document.getElementById("emptyNextDay");
                            var cln = itm.cloneNode(true);
                            document.getElementById('daysDiv').appendChild(cln);
                            document.getElementById('daysDiv').children[document.getElementById('daysDiv').children.length - 2].innerHTML = data;
                            var res = $("#emptyNextDay").find(".dow-div").first().data("tvdayref");
                            //console.log("res: "+res);
                            document.getElementById('daysDiv').appendChild(cln);
                            //Нужно бы еще дописать добавление в список на апдейт
                            document.getElementById('daysDiv').children[document.getElementById('daysDiv').children.length - 2].id = res;
                            itm.classList.remove('dayrectAdd');
                            itm.classList.add('dayrect');
                            var cln = document.getElementById('daysDiv').children[document.getElementById('daysDiv').children.length - 1];
                            cln.id = "emptyNextDay";
                            //console.log(document.getElementById('daysDiv').children[document.getElementById('daysDiv').children.length - 1].id);


                            var parts = curDt.split(".");
                            var dt = new Date(parseInt(parts[2], 10),
                                              parseInt(parts[1], 10) - 1,
                                              parseInt(parts[0], 10));

                            console.log("dt: " + dt.toString());
                            dt.setDate(dt.getDate() + 1);
                            var month = dt.getMonth() + 1;
                            var day = dt.getDate();
                            var newDateStr = (day < 10 ? '0' : '') + day + '.' + (month < 10 ? '0' : '') + month + '.' + dt.getFullYear();
                            cln.dataset.tvdate = newDateStr;
                            console.log("cln.dataset.tvdate: " + cln.dataset.tvdate);
                            console.log("same: " + $("#emptyNextDay").data("tvdate"));
                            document.getElementById('addDayButton').innerHTML = "Добавить " + newDateStr;





                            var cont = document.getElementById('endlessScrollContainer');
                            var style = window.getComputedStyle(cont, null);
                            var newWidth = document.getElementById('daysDiv').children.length*parseInt(document.getElementById('daysDiv').children[0].style.width)+100;
                            console.log("newWidth: "+newWidth);
                            cont.style.width = newWidth + "px";
                            console.log("newWidth: " + newWidth);

                        }
                    });
                };
                function addDay2() {
                    var curDt = $("#emptyNextDay").data("tvdate");                    
                    var itm = document.getElementById("emptyNextDay");
                    var cln = itm.cloneNode(true);                    
                    document.getElementById('daysDiv').appendChild(cln);
                    //var res = $("#emptyNextDay").find(".dow-div").first().data("tvdayref");
                    document.getElementById('daysDiv').appendChild(cln);                    
                    document.getElementById('daysDiv').children[document.getElementById('daysDiv').children.length - 2].id = "temp_"+curDt;
                    itm.classList.remove('dayrectAdd');
                    itm.classList.add('dayrect');
                    var cln = document.getElementById('daysDiv').children[document.getElementById('daysDiv').children.length - 1];
                    cln.id = "emptyNextDay";
                    var parts = curDt.split(".");
                    var dt = new Date(parseInt(parts[2], 10),
                                      parseInt(parts[1], 10) - 1,
                                      parseInt(parts[0], 10));

                    console.log("dt: " + dt.toString());
                    dt.setDate(dt.getDate() + 1);
                    var month = dt.getMonth() + 1;
                    var day = dt.getDate();
                    var newDateStr = (day < 10 ? '0' : '') + day + '.' + (month < 10 ? '0' : '') + month + '.' + dt.getFullYear();
                    cln.dataset.tvdate = newDateStr;
                    //console.log("cln.dataset.tvdate: " + cln.dataset.tvdate);
                    //console.log("same: " + $("#emptyNextDay").data("tvdate"));
                    //document.getElementById('addDayButton').innerHTML = "Добавить " + newDateStr;


                    var cont = document.getElementById('endlessScrollContainer');
                    var style = window.getComputedStyle(cont, null);
                    var newWidth = document.getElementById('daysDiv').children.length * parseInt(document.getElementById('daysDiv').children[0].style.width) + 100;
                    console.log("newWidth: " + newWidth);
                    cont.style.width = newWidth + "px";
                    console.log("newWidth: " + newWidth);


                    $.ajax({
                        type: 'POST',
                        cache: false,
                        data: { 'curDt': curDt },
                        url: '/Day/AddDayByDate',
                        success: function (data) {
                            //document.getElementById('daysDiv').children[document.getElementById('daysDiv').children.length - 2].innerHTML = data;
                            var curId = "temp_" + curDt;
                            document.getElementById(curId).innerHTML = data;
                            //document.getElementById(curId).id = res;
                            console.log("curId: " + document.getElementById(curId).id);
                            document.getElementById(curId).id = document.getElementById(curId).getElementsByClassName('dow-div')[0].dataset.tvdayref;
                            
                        }
                    });
                };
                function addDayBefore() {
                    var curDt = $("#emptyPrevDay").data("tvdate");
                    //console.log("curDt: "+curDt);
                    var itm = document.getElementById("emptyPrevDay");
                    var cln = itm.cloneNode(true);
                    //document.getElementById('daysDiv').appendChild(cln);
                    document.getElementById('daysDiv').insertBefore(cln, document.getElementById('daysDiv').firstChild);
                    //var res = $("#emptyPrevDay").find(".dow-div").first().data("tvdayref");
                    //document.getElementById('daysDiv').appendChild(cln);
                    document.getElementById('daysDiv').insertBefore(cln, document.getElementById('daysDiv').firstChild);
                    //document.getElementById('daysDiv').children[document.getElementById('daysDiv').children.length - 2].id = "temp_" + curDt;
                    document.getElementById('daysDiv').children[1].id = "temp_" + curDt;
                    itm.classList.remove('dayrectAdd');
                    itm.classList.add('dayrect');
                    //var cln = document.getElementById('daysDiv').children[document.getElementById('daysDiv').children.length - 1];
                    var cln = document.getElementById('daysDiv').firstChild;
                    cln.id = "emptyPrevDay";
                    var parts = curDt.split(".");
                    var dt = new Date(parseInt(parts[2], 10),
                                      parseInt(parts[1], 10) - 1,
                                      parseInt(parts[0], 10));

                    //console.log("dt: " + dt.toString());
                    dt.setDate(dt.getDate() - 1);
                    var month = dt.getMonth() + 1;
                    var day = dt.getDate();
                    var newDateStr = (day < 10 ? '0' : '') + day + '.' + (month < 10 ? '0' : '') + month + '.' + dt.getFullYear();
                    //console.log("newDateStr: " + newDateStr);
                    cln.dataset.tvdate = newDateStr;
                    //console.log("cln.dataset.tvdate: ") + cln.dataset.tvdate;
                    //console.log("cln.dataset.tvdate: " + cln.dataset.tvdate);
                    //console.log("same: " + $("#emptyPrevDay").data("tvdate"));
                    //document.getElementById('addDayButton').innerHTML = "Добавить " + newDateStr;


                    var cont = document.getElementById('endlessScrollContainer');
                    var style = window.getComputedStyle(cont, null);
                    var newWidth = document.getElementById('daysDiv').children.length * parseInt(document.getElementById('daysDiv').children[0].style.width) + 100;
                    cont.style.width = newWidth + "px";

                    //setTimeout(function () { window.scrollBy(parseInt(document.getElementById('daysDiv').children[0].style.width), 0); }, 1)
                    window.scrollBy(parseInt(document.getElementById('daysDiv').children[0].style.width), 0);
                    //document.getElementById('weekPickerContainer').style.marginLeft = parseInt(document.getElementById('weekPickerContainer').style.marginLeft)+parseInt(document.getElementById('daysDiv').children[0].style.width)+"px";


                    $.ajax({
                        type: 'POST',
                        cache: false,
                        data: { 'curDt': curDt },
                        url: '/Day/AddDayByDate',
                        success: function (data) {
                            
                            //document.getElementById('daysDiv').children[document.getElementById('daysDiv').children.length - 2].innerHTML = data;
                            var curId = "temp_" + curDt;
                            //console.log("curId: " + curId);
                            document.getElementById(curId).innerHTML = data;
                            //document.getElementById(curId).id = res;
                            //console.log("curId: " + document.getElementById(curId).id);
                            document.getElementById(curId).id = document.getElementById(curId).getElementsByClassName('dow-div')[0].dataset.tvdayref;
                            
                        }
                    });
                };

                $('#daysDiv').ready(function () {
                    var mainDay = document.getElementById('daysDiv').children[1];
                    var daysNum = 10;
                    
                    for (var i = 0; i < daysNum; i++)
                    {
                        addDayBefore();
                        addDay2();
                    }
                    //setTimeout(function () { document.getElementById(mainDay.id).scrollIntoView()}, 1);
                    setTimeout(function () { window.scrollTo(document.getElementById(mainDay.id).offsetLeft,0)}, 1);

                });

                /*
    $(window).scroll(function () {
       // if ($(window).scrollTop() == $(document).height() - $(window).height()) {
        // ajax call get data from server and append to the div

        // }
        //console.log("scrollLeft: " + $(window).scrollLeft());
        //console.log("doc.width-win.width: " + ($(document).width() - $(window).width()));
        
        $("#weekPickerContainer").css("margin-left", 400 + $(document).scrollLeft());

        if (($(window).scrollLeft()+500) > $(document).width() - $(window).width()) {
            console.log("Right scroll event triggered");
            addDay2();
            //console.log("removing: " + document.getElementById('daysDiv').children[document.getElementById('daysDiv').children.length - 1].id);
            //document.getElementById('daysDiv').removeChild(document.getElementById('daysDiv').children[document.getElementById('daysDiv').children.length - 1]);
        }
        if (($(window).scrollLeft() - 500) < 0) {
            console.log("Left scroll event triggered");
            addDayBefore();
        }
    });
    */

    $(window).scroll(function () {
        if (isScrolledIntoView(document.getElementById('emptyNextDay')))
        {
            
            addDay2();
            
        }
        if (isScrolledIntoView(document.getElementById('emptyPrevDay'))) {
            addDayBefore();
            //setTimeout(function () { window.scrollBy(parseInt(document.getElementById('daysDiv').children[0].style.width), 0); }, 1);
            
        }
        
    });

    function isScrolledIntoView(elem) {
        var docViewTop = $(window).scrollTop();
        var docViewBottom = docViewTop + $(window).height();

        var docViewLeft = $(window).scrollLeft();
        var docViewRight = docViewLeft + $(window).width();

        var elemLeft = $(elem).offset().left;
        var elemRight = elemLeft + $(elem).width();

        return ((elemLeft <= docViewRight) && (elemRight >= docViewLeft));
    }


    $("#progFlyoutHandle").click(function (evt) {

        if (document.getElementById("progFlyout").style.right == "-200px") {
            $.ajax({
                type: 'GET',
                cache: false,
                url: '/Day/ConstructZapas',
                success: function (data) {

                    document.getElementById('progFlyout').innerHTML = data;
                    console.log(document.getElementById('progFlyout').innerHTML);
                    $("#progFlyoutHandle").animate({ right: "200px" }, 500);
                    $("#progFlyout").animate({ right: "0" }, 500);
                }
            });
        }
        else {
            document.getElementById('progFlyout').innerHTML = "";
            $("#progFlyoutHandle").animate({ right: "0" }, 500);
            $("#progFlyout").animate({ right: "-200px" }, 500);
        }
    });

    $("#rtfButton").click(function () {

        var dUpdate = $.connection.dayUpdate;
        var repType = document.getElementById("printButton").dataset.reporttype;
        var weekId = document.getElementById("printButton").dataset.weekid;
        var dayVariantList = "";

        var dateDivs = document.getElementsByClassName("date-div");
        var varDivs = document.getElementsByClassName("varCode-div");

        for (var i = 0; i < dateDivs.length; i++) {
            dayVariantList += dateDivs[i].innerHTML + "_";
            var str = varDivs[i].id;
            var varCode = str.substring(3);
            dayVariantList += varCode;
            if (i != dateDivs.length - 1) {
                dayVariantList += ";";
            }
        }
        console.log("RTF OK!");
    });
            </script>

            <script>
                $(function () {
                    var dUpdate = $.connection.dayUpdate;
                    var xmlhttp;
                    xmlhttp = new XMLHttpRequest();


                    dUpdate.client.broadcastMessage = function (tvdayref, varNum, serverTime) {
                        console.log(serverTime);
                        if (tvdayref != "") {
                            var xmlhttp;
                            xmlhttp = new XMLHttpRequest();

                            xmlhttp.onreadystatechange = function () {
                                if (xmlhttp.readyState == XMLHttpRequest.DONE) {
                                    console.log(tvdayref + '-' + serverTime);
                                    if (xmlhttp.status == 200) {
                                        document.getElementById(tvdayref).innerHTML = xmlhttp.responseText;
                                        document.getElementById("timestampDiv").innerHTML = serverTime;


                                    }
                                    else if (xmlhttp.status == 400) {
                                        console.log(xmlhttp.statusText);
                                    }
                                    else {
                                        console.log(xmlhttp.statusText);
                                        console.log(xmlhttp.responseText);
                                    }
                                }
                            }
                            xmlhttp.open("POST", "UpdateDayWeek", true);
                            xmlhttp.setRequestHeader("dayID", tvdayref);
                            xmlhttp.setRequestHeader("varNum", varNum);
                            xmlhttp.send(tvdayref);
                        }
                    };

                    /*Added 22/06/16*/
                    $.connection.hub.disconnected(function () {
                        console.log("reconnected at " + Date.now());
                        setTimeout(function () {
                            $.connection.hub.start();
                        }, 5000); // Restart connection after 5 seconds.
                    });

                    $.connection.hub.start().done(function () {
                        var allDayRects1 = document.getElementsByClassName("dayrect");
                        for (var i = 0; i < allDayRects1.length; i++) {
                            dUpdate.server.subscribe(allDayRects1.item(i).id);
                        }
                        setInterval(function () {
                            var allDayRects2 = document.getElementsByClassName("dayrect");
                            for (var i = 0; i < allDayRects2.length; i++) {
                                if (allDayRects1.item(i).id != allDayRects2.item(i).id) {
                                    dUpdate.server.subscribe(allDayRects2.item(i).id);
                                }
                            }
                            allDayRects1 = allDayRects2;
                        }, 3000);
                    });
                });
            </script>
 
    </body>

</html>

