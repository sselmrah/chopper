@model chopper1.Models.Week

@{
    string dayVariantList = "";
}

<div class="weekPickerContainer">
    <div id="weekSelectContainer">@{Html.RenderAction("SelectCategory", "Weeks", new { curWeekRef = Model.Ref, repType = "stolby" });}</div>
</div>
    <p id="messages"></p>
    <div></div>
    @*
        <div>
            @Html.DisplayFor(model => model.DaysCount)
        </div>
    *@
    
<div class="row">
        @{
            for (int day = 0; day < Model.DaysCount; day++)
            {
                
                System.Globalization.CultureInfo russian = new System.Globalization.CultureInfo("ru-RU");
                string dowRus = Model.Days[day * 5].TVDate.Date.ToString("dddd", russian);
                dowRus = char.ToUpper(dowRus[0]) + dowRus.Substring(1);
                <div id="dowlink@(day*5)" class="dowlink"></div>
                <div id="dow@(day*5)" class="stolbyDow">
                    <div id="dowCaption">@dowRus, @Model.Days[day * 5].TVDate.Date.ToString("dd MMMM yyyy") года</div>
                    <div id="dowSwitch">
                        <a href="#dowlink0">Пн </a>
                        <a href="#dowlink5">Вт </a>
                        <a href="#dowlink10">Ср </a>
                        <a href="#dowlink15">Чт </a>
                        <a href="#dowlink20">Пт </a>
                        <a href="#dowlink25">Сб </a>
                        <a href="#dowlink30">Вс</a>
                    </div>
                </div>
                <div class="stolbyDay">
                    @{
                        
                int curDayNum;
                for (int chCode = 0; chCode <= 4; chCode++)
                {
                    dayVariantList += Model.Days[day*5+chCode].TVDate.ToString("dd.MM.yyyy") + "_" + Model.Days[day*5+chCode].VariantKod + "_" + (chCode+10).ToString() + ";";
                    curDayNum = day * 5 + chCode;
                    string chCaption = "Первый канал (Орбита " + chCode.ToString() + ")";
                    
                    if (Model.Days[curDayNum] != null)
                    {
                        Html.RenderAction("StolbyDay", "Day", Model.Days[curDayNum]);
                    }
                    else
                    {
                        <div class="stolbyChannel">
                            <div class="stolbyChannelCaption">
                                @chCaption
                            </div>
                            <table class="stolbyEfirTable"></table>
                        </div>
                    }
                }
                    }
                </div>
            }            
            if (dayVariantList.Length>0) {
                dayVariantList = dayVariantList.Substring(0, dayVariantList.Length - 1);            
            }
}
    </div>

<div class="rightSideButtons visible-lg">
    <a id="rtfDownloadLink" href="@Url.Action("Download", "Weeks", new { dayVariantList = dayVariantList, repType = "stolby" }, null)">
        <div class="sideButtons" id="rtfButton" data-reporttype="stolby">
            <span>.rtf</span>
        </div>
    </a>
</div>


    <script>

        document.addEventListener("DOMContentLoaded", function a() {
            try {
                var source = new EventSource('checkdays');
                var myP = document.getElementById("messages");

                source.onmessage = function (event) {
                    var result = event.data;
                    @*myP.innerHTML += result;*@
                    @*If result not empty - call actionresult to redraw a day*@
                    if (result != "") {
                        var xmlhttp;
                        xmlhttp = new XMLHttpRequest();

                        xmlhttp.onreadystatechange = function () {
                            if (xmlhttp.readyState == XMLHttpRequest.DONE) {
                                if (xmlhttp.status == 200) {
                                    console.log(result);
                                    document.getElementById(result).innerHTML = xmlhttp.responseText;
                                }
                                else if (xmlhttp.status == 400) {
                                    @*alert('There was an error 400')*@
                                    console.log(xmlhttp.statusText);
                                }
                                else {
                                    @*alert('something else other than 200 was returned')*@
                                    console.log(xmlhttp.statusText);
                                }
                            }
                        }
                        xmlhttp.open("POST", "UpdateDayStolby", true);
                        xmlhttp.setRequestHeader("dayID", result);
                        xmlhttp.send(result);
                    }

                };
            }
            catch (err)
            {
                console.log(err.message);
            }
            source.onerror = function (e) {                
            };

        });



    </script>
